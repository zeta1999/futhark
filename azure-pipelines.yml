# This is a simple Azure configuration, which is intended for use
# on applications which do not require cross-platform and
# multiple-GHC-version support. For more information and other
# options, see:
#
# https://docs.haskellstack.org/en/stable/azure_ci/

jobs:
- job: build_windows
  pool:
    vmImage: windows-2019

  timeoutInMinutes: 120

  variables:
    GHC_VERSION: "8.8.3"
    CABAL_VERSION: "3.0.0.0"
    CABAL_DIR: ""
    CABAL_STORE_DIR: "C:\\sd"

  steps:

  - checkout: self
    submodules: true

  - bash: |
      choco install -y msys2
    displayName: Install MSYS2

  - bash: |
      choco install -y ghc --version=$(GHC_VERSION)
    displayName: Install GHC

  - bash: |
      choco install -y cabal
    displayName: Install cabal

  - bash: |
      export PATH=`cygpath $ProgramData`/chocolatey/lib/ghc/tools/ghc-$(GHC_VERSION)/bin:$PATH
      echo $PATH
      cabal update
      cabal install -j1
    displayName: Build Futhark compiler

- job: build_linux
  pool:
    vmImage: ubuntu-18.04

  timeoutInMinutes: 120

  steps:

  - checkout: self
    submodules: true

  - script: |
      set -e
      sudo apt update
      sudo apt install opencl-headers nvidia-cuda-dev nvidia-opencl-dev python-numpy
    displayName: Install OS-level dependencies

  - script: |
      set -e
      mkdir -p ~/.ghcup/bin
      curl https://gitlab.haskell.org/haskell/ghcup/raw/master/ghcup > ~/.ghcup/bin/ghcup
      chmod +x ~/.ghcup/bin/ghcup
      ~/.ghcup/bin/ghcup install 8.8.2
      ~/.ghcup/bin/ghcup set 8.8.2
      ~/.ghcup/bin/ghcup install-cabal
    displayName: Install GHC and cabal

  - script: |
      set -e
      export PATH=$HOME/.ghcup/bin:$PATH
      cabal update
      cabal install --only-dependencies
    displayName: Build Haskell dependencies

  - script: |
      set -e
      export PATH=$HOME/.ghcup/bin:$PATH
      mkdir -p $HOME/.local/bin
      cabal install --installdir=$HOME/.local/bin --install-method=copy
    displayName: Build and install Futhark compiler

  - script: |
      set -e
      export PATH=$HOME/.ghcup/bin:$PATH
      cabal haddock
    displayName: Build docs

  - script: |
      set -e
      export PATH=$HOME/.ghcup/bin:$PATH
      cabal test
    displayName: Run unit tests

  - script: |
      set -e
      export PATH=$HOME/.local/bin:$PATH
      futhark test -C --no-terminal --backend=opencl --exclude=no_opencl tests examples
    displayName: Compile tests with backend=opencl

  - script: |
      set -e
      export PATH=$HOME/.local/bin:$PATH
      futhark test -C --no-terminal --backend=cuda --exclude=no_opencl tests examples
    displayName: Compile tests with backend=cuda

  - script: |
      set -e
      export PATH=$HOME/.local/bin:$PATH
      futhark test -c --no-terminal --no-tuning --backend=python --exclude=no_python tests examples
    displayName: Compile tests and run with backend=python


  - script: |
      set -e
      export PATH=$HOME/.local/bin:$PATH
      futhark test -C --no-terminal --backend=opencl --exclude=no_opencl futhark-benchmarks
    displayName: Compile benchmarks with backend=opencl
